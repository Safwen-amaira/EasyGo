{% extends 'base.html.twig' %}

{% block title %}🎁 Liste des Récompenses{% endblock %}

{% block body %}
<div class="container py-5">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary fw-bold">🎁 Récompenses Fidélité</h2>
        <a href="{{ path('recompense_new') }}" class="btn btn-outline-primary rounded-pill">➕ Ajouter</a>
    </div>
    <a href="{{ path('recompense_statistiques') }}" class="btn btn-outline-info mb-4">
        📈 Voir les statistiques
    </a>

    {# 🔍 Barre de recherche #}
    <form method="get" action="{{ path('recompense_index') }}" class="mb-4 row g-2 align-items-center">
        <div class="col-sm-8">
            <input type="text" name="search" id="search" value="{{ search }}" class="form-control" placeholder="🔍 Rechercher une description...">
        </div>
        <div class="col-sm-2">
            <button type="submit" class="btn btn-primary w-100">Rechercher</button>
        </div>
    </form>

    {# 🧾 Tableau des récompenses #}
    <div id="recompense-results">
        <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
            <table class="table table-striped table-bordered align-middle shadow-sm">
                <thead class="table-light">
                    <tr>
                        <th><a href="#" class="sort" data-sort="id">#</a></th>
                        <th><a href="#" class="sort" data-sort="description">Description</a></th>
                        <th><a href="#" class="sort" data-sort="points_requis">Points</a></th>
                        <th>Type</th>
                        <th><a href="#" class="sort" data-sort="date_expiration">Expiration</a></th>
                        <th>Utilisateur</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody id="recompense-body">
                    {% for recompense in recompenses %}
                        <tr>
                            <td>{{ recompense.id }}</td>
                            <td>{{ recompense.description|default('—') }}</td>
                            <td><span class="badge bg-warning text-dark">{{ recompense.points_requis }}</span></td>
                            <td>
                                <span class="badge bg-info text-white">
                                    {{ recompense.typeRecompense ? recompense.typeRecompense.nom : '—' }}
                                </span>
                            </td>
                            <td>{{ recompense.date_expiration ? recompense.date_expiration|date('d/m/Y') : '—' }}</td>
                            <td>
                                {{ recompense.utilisateurfidelite ? recompense.utilisateurfidelite.nomUtilisateur : '—' }}
                            </td>
                            <td class="text-center">
                                <a href="{{ path('recompense_edit', {id: recompense.id}) }}" class="btn btn-sm btn-outline-primary">✏️</a>
                                <a href="{{ path('recompense_delete', {id: recompense.id}) }}" class="btn btn-sm btn-outline-danger">🗑️</a>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="7" class="text-center text-muted">Aucune récompense trouvée.</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>

{# 📜 JS Search + Tri (inline script) #}
<script>
let currentDirection = 'ASC';
let currentSort = '';

function fetchRewards(searchTerm = '', sort = '', direction = 'ASC') {
    const params = new URLSearchParams({
        search: searchTerm,
        sort: sort,
        direction: direction
    });

    fetch(`?${params.toString()}`, {
        headers: { 'X-Requested-With': 'XMLHttpRequest' }
    })
    .then(response => response.json())
    .then(data => {
        const tbody = document.getElementById('recompense-body');
        tbody.innerHTML = '';

        if (data.length > 0) {
            data.forEach(r => {
                tbody.innerHTML += `
                    <tr>
                        <td>${r.id}</td>
                        <td>${r.description}</td>
                        <td><span class="badge bg-warning text-dark">${r.points}</span></td>
                        <td><span class="badge bg-info text-white">${r.type ?? '—'}</span></td>
                        <td>${r.expiration ?? '—'}</td>
                        <td>${r.user ?? '—'}</td>
                        <td class="text-center">
                            <a href="/recompense/${r.id}/edit" class="btn btn-sm btn-outline-primary">✏️</a>
                            <a href="/recompense/${r.id}/delete" class="btn btn-sm btn-outline-danger">🗑️</a>
                        </td>
                    </tr>`;
            });
        } else {
            tbody.innerHTML = `<tr><td colspan="7" class="text-center text-muted">Aucune récompense trouvée.</td></tr>`;
        }
    });
}

document.getElementById('search').addEventListener('input', function () {
    fetchRewards(this.value, currentSort, currentDirection);
});

document.querySelectorAll('.sort').forEach(link => {
    link.addEventListener('click', function (e) {
        e.preventDefault();
        const sort = this.dataset.sort;
        currentDirection = (currentSort === sort && currentDirection === 'ASC') ? 'DESC' : 'ASC';
        currentSort = sort;
        fetchRewards(document.getElementById('search').value, currentSort, currentDirection);
    });
});
</script>
{% endblock %}
