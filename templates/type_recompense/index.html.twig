{% extends 'base.html.twig' %}

{% block title %}üóÇÔ∏è Types de R√©compenses{% endblock %}

{% block body %}
<div class="container py-5">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary fw-bold">üóÇÔ∏è Types de R√©compenses</h2>
        <a href="{{ path('type_recompense_new') }}" class="btn btn-outline-primary rounded-pill">
            ‚ûï Ajouter
        </a>
        <a href="{{ path('type_recompense_export', {
    search: search,
    statut: statut,
    categorie: categorie,
    sort: sort,
    direction: direction
}) }}"
   class="btn btn-success mb-3">
   üì• Exporter en Excel
</a>

    </div>

    <form method="get" class="row g-2 align-items-center mb-3" id="filter-form">
        <div class="col-sm-4">
            <input type="text" name="search" id="search" class="form-control" placeholder="üîç Rechercher par nom..." value="{{ search ?? '' }}">
        </div>

        <div class="col-sm-3">
            <select name="statut" id="statut" class="form-select">
                <option value="">Tous les statuts</option>
                <option value="actif">Actif</option>
                <option value="inactif">Inactif</option>
            </select>
        </div>

        <div class="col-sm-3">
            <input type="text" name="categorie" id="categorie" class="form-control" placeholder="Filtrer par cat√©gorie">
        </div>
    </form>

    <div class="table-responsive shadow-sm" style="max-height: 400px; overflow-y: auto;">
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th><a href="{{ path(app.request.attributes.get('_route'), app.request.query.all | merge({'sort': 'id', 'direction': sort == 'id' and direction == 'ASC' ? 'DESC' : 'ASC'}) ) }}">#</a></th>
                    <th><a href="{{ path(app.request.attributes.get('_route'), app.request.query.all | merge({'sort': 'nom', 'direction': sort == 'nom' and direction == 'ASC' ? 'DESC' : 'ASC'}) ) }}">Nom</a></th>
                    <th><a href="{{ path(app.request.attributes.get('_route'), app.request.query.all | merge({'sort': 'categorie', 'direction': sort == 'categorie' and direction == 'ASC' ? 'DESC' : 'ASC'}) ) }}">Cat√©gorie</a></th>
                    <th>Statut</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody id="type-recompense-body">
                {% for type in types %}
                    <tr>
                        <td>{{ type.id }}</td>
                        <td>{{ type.nom }}</td>
                        <td>{{ type.categorie }}</td>
                        <td>
                            {% if type.actif %}
                                <span class="badge bg-success">Actif</span>
                            {% else %}
                                <span class="badge bg-secondary">Inactif</span>
                            {% endif %}
                        </td>
                        <td class="text-center">
                            <a href="{{ path('type_recompense_edit', { id: type.id }) }}" class="btn btn-sm btn-outline-primary">‚úèÔ∏è Modifier</a>
                            <a href="{{ path('type_recompense_delete', { id: type.id }) }}" class="btn btn-sm btn-outline-danger" onclick="return confirm('Supprimer ce type ?');">üóëÔ∏è Supprimer</a>
                            <a href="{{ path('type_recompense_toggle', { id: type.id }) }}" class="btn btn-sm btn-outline-warning">üîÅ Toggle</a>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="5" class="text-center text-muted">Aucun type trouv√©.</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    {% if not app.request.isXmlHttpRequest %}
<div class="mt-3 d-flex justify-content-center">
    {{ knp_pagination_render(types) }}
</div>
{% endif %}


</div>

<script>
let currentDirection = '{{ direction|default('ASC') }}';
let currentSort = '{{ sort|default('') }}';

function fetchTypes() {
    const search = document.getElementById('search').value;
    const statut = document.getElementById('statut').value;
    const categorie = document.getElementById('categorie').value;

    const params = new URLSearchParams({
        search: search,
        sort: currentSort,
        direction: currentDirection,
        statut: statut,
        categorie: categorie
    });

    fetch(`?${params.toString()}`, {
        headers: { 'X-Requested-With': 'XMLHttpRequest' }
    })
    .then(response => response.json())
    .then(data => {
        const tbody = document.getElementById('type-recompense-body');
        tbody.innerHTML = '';

        if (data.length > 0) {
            data.forEach(type => {
                tbody.innerHTML += `
                    <tr>
                        <td>${type.id}</td>
                        <td>${type.nom}</td>
                        <td>${type.categorie}</td>
                        <td>
                            <span class="badge ${type.actif ? 'bg-success' : 'bg-secondary'}">
                                ${type.actif ? 'Actif' : 'Inactif'}
                            </span>
                        </td>
                        <td class="text-center">
                            <a href="/type-recompense/${type.id}/edit" class="btn btn-sm btn-outline-primary">‚úèÔ∏è Modifier</a>
                            <a href="/type-recompense/${type.id}/delete" class="btn btn-sm btn-outline-danger" onclick="return confirm('Supprimer ce type ?');">üóëÔ∏è Supprimer</a>
                            <a href="/type-recompense/toggle/${type.id}" class="btn btn-sm btn-outline-warning">üîÅ Toggle</a>
                        </td>
                    </tr>`;
            });
        } else {
            tbody.innerHTML = `<tr><td colspan="5" class="text-center text-muted">Aucun type trouv√©.</td></tr>`;
        }
    });
}

document.getElementById('search').addEventListener('input', fetchTypes);
document.getElementById('statut').addEventListener('change', fetchTypes);
document.getElementById('categorie').addEventListener('input', fetchTypes);

document.querySelectorAll('.sort').forEach(link => {
    link.addEventListener('click', function (e) {
        e.preventDefault();
        const sort = this.dataset.sort;
        currentDirection = (currentSort === sort && currentDirection === 'ASC') ? 'DESC' : 'ASC';
        currentSort = sort;
        fetchTypes();
    });
});
</script>
{% endblock %}
