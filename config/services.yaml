# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    vehicule_images_directory: '%kernel.project_dir%/public/uploads/vehicules'
    infobip_api_key: '%env(INFOBIP_API_KEY)%'
    infobip_base_url: '%env(INFOBIP_BASE_URL)%'
    infobip_sender: '%env(INFOBIP_SENDER)%'
    test_phone_number: '%env(TEST_PHONE_NUMBER)%'
    pdf_directory: '%kernel.project_dir%/public/pdf'


services:

    App\Security\GoogleAuthenticator:
        arguments:
            $clientRegistry: '@knpu.oauth2.registry'
            $entityManager: '@doctrine.orm.entity_manager'
            $router: '@router.default'

    # OAuth User Provider
    app.oauth_user_provider:
        class: App\Security\OAuthUserProviderEasyGo
        arguments: ['@doctrine.orm.entity_manager']

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $pdfDir: '%pdf_directory%'
            Symfony\Component\String\Slugger\SluggerInterface: '@Symfony\Component\String\Slugger\SluggerInterface'

    App\EventListener\JWTCreatedListener:
        tags:
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_authentication_success', method: onAuthenticationSuccess }
    App\Security\UserLoginProvider:
        arguments:
            $userRepository: '@App\Repository\UsersRepository'

    App\Service\InfobipService:
        public: true  # <-- Ajoutez cette ligne
        arguments:
            $params: '@parameter_bag'
            $logger: '@logger'

    App\Service\PdfGenerator:
        public: true
        arguments:
            - '@Symfony\Component\String\Slugger\SluggerInterface'
            - '%pdf_directory%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name


    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
